buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
        classpath "org.grails.plugins:hibernate4:5.0.10"
    }
}

version "0.1"
group "lapsi"

apply plugin: 'idea'
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    jcenter()
}


assets {
    minifyJs = true
    minifyCss = true
}


dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    compile "org.grails:grails-core"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"

    profile "org.grails.profiles:web"

    compile "org.grails.plugins:spring-security-core:3.0.3"

    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"

    runtime "com.h2database:h2"
    compile "org.grails.plugins:hibernate4"
    compile "org.hibernate:hibernate-ehcache"

    console "org.grails:grails-console"
    compile "org.grails.plugins:fields:2.1.2"

    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.10.0"
    assets "com.bertramlabs.plugins:coffee-asset-pipeline:2.10.0"

    testCompile "org.grails:grails-plugin-testing"
}

/*
task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
*/
